Here are some commonly used DOM functions and properties:

getElementById(): Retrieves an element from the DOM using its id attribute.
getElementsByClassName(): Retrieves a collection of elements from the DOM based on their class name.
getElementsByTagName(): Retrieves a collection of elements from the DOM based on their tag name.
querySelector(): Retrieves the first element that matches a specified CSS selector.
querySelectorAll(): Retrieves a collection of elements that match a specified CSS selector.
createElement(): Creates a new element node.
createTextNode(): Creates a new text node.
appendChild(): Appends a node as the last child of a parent node.
removeChild(): Removes a child node from its parent node.
parentNode: Gets the parent node of an element.
childNodes: Gets a collection of child nodes of an element.
classList: Provides methods to add, remove, toggle, or check the presence of CSS classes on an element.
innerHTML: Gets or sets the HTML content of an element.
innerText: Gets or sets the text content of an element.
style: Provides access to CSS styles of an element.
addEventListener(): Attaches an event listener to an element.
removeEventListener(): Removes an event listener from an element.
setAttribute(): Sets the value of an attribute on an element.
getAttribute(): Retrieves the value of an attribute on an element.
document.body.FirstElementChild.style.background - "red"
classList: Provides methods to manipulate the class names of an element.


These are just a few of the many functions and properties available in the DOM. The DOM provides a rich set of methods and 
properties for working with HTML elements and manipulating the structure and content of web pages.


NOTE:
The main difference between the selectElementByID or class and queryselector is that SelectElementById uses id name or class name whereas queryselector use CSS selectors (.class for class and #anyname for id) for selecting the element 

*******************
Handling events


element.onclick = function () { alert('yes') };

let handler = function (e) {}

here e is an event object which is always automatically created by the browser when an event happens and this contains all details of that event to see that print console.log(e).
or console.log(e.type) etc. 
You can give any name you want to that event object e.g, function(cool) now cool is an event object.

element.addEventListner(event, handler); //here handler could be any function
element.removeEventListner(event, handler);


*****************Call back function
Passing a function as an argument to another function is called callback

function loadscript(src, callback) {
var script = document.createElement("Script");
script.src = src;

script.onload = function() {
console.log("Script loaded");
callback();
}

script.onerror = function() {
console.log("Script not loaded ERROR");
callback(new ERROR("SRC error" );
}
document.body.appendChild(script);
}


funciton hello() {
if (error) {
handle error
}
else {
do something else}
alert('hello')
}


loadscript("https://dashd.js", hello)

here hello will act as callback function

*************Promise

let p = new promise((resolve, reject) => {}
