code ~/Desktop/my-project
code index.html
code . (to open Vs code)
i to insert
q for quit
escape :wq 

------setting git----------------------
git config --global user.name "username"
git config --global user.email "abc@gmail.com"

git config --global user.name
git config --global user.email

------------------git commands------------------
git init (to initialize the git)
git status (to check whats going on)
touch filename.extension (create any file)
touch foldername/ (create a folder)
ls (list)
ls -lart (show all hidden folders)
git rm -filename (remove file)
git rm -cached filename (remove file only from staging area)
git log (to check the history log what we have done)
git checkout -p -no.ofcommits (to check desired number of modifications  )
git commit -a -m "any message" (to commit all files)
git commit filename -m "any message" (to commit 
git add -A (tracking all files)
git add filename (tracking a file by its name)
git checkout branchname (to switch from 1 branch to another)
git checkout filename (to match the file with the last commit)
git checkout -f (to match all the file with the last commit)
git branch branch_name (to create a branch)
git checkout -b branchname (short hand to create and shift to that created branch)
git merge branchname (to merge the created branch with the master branch)
git status -s (tells small status for working tree)
touch .gitignore (to make gitignore directory)
git branch -a (to check how many branches are there)
git start filename (to open any file)

git diff --staged   (compares staging area with last commit)
git commit -a -m “msg” (skip staging area and direct commit the changes)

---------------------how to upload projects on Git hub------------
click on plus sign on github

touch .gitignore (if needed)
git init
git add .
git commit -m "initial commit"
git status

for private files:
you will get an SSH link to make an origin for your repository
then past that link in git bash

git remote add origin paste SSH link
git push origin master (push my master repository to origin)

you will get and error
now you need an authentication 

here first generate you SSH key (ssh-keygen -t rsa -b 4096 -C "your_email@example.com")
you have generated a new SSH key for your project, here you will get a path link in git bash terminal
then type:

cat (paste that path)
you will get you SSH key
now go to settings on github website then go to SSH and GPG keys
then give title and paste that generated key here

now go back to git bash terminal and again type "git push origin master"
Congratulations you have successfully uploaded your first project



#not a part of code
# how to create a virtual environment
#syntax : python -m venv c:\path\venv
#then restart the terminal 
# then type: pip install package name


#----------------------Cloning and uploading a folder from system-----------
create a public repository in github
then clone it using  HTTP using: $ git clone past_HTTP_Link
then paste your files in that created folder and then use:
$ git add .
$ git commit -m "initial commit"
$ git push origin master/main
then authentication will be requires as :
warning: could not find UI helper 'GitHub.UI'Select an authentication method for 'https://github.com/':1. Web browser (default)2. Device code3. Personal access tokenoption (enter for default): 
enter 1
then go to browers and give password for authentication access
Done!


#-------------------Creating git repository from terminal-----------
git init
git add README.md
git commit -m "first commit"
git remote add origin git@github.com:alexpchin/<reponame>.git
git push -u origin master